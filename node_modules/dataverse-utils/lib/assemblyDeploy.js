"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deployAssembly = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const pluginAssembly_1 = require("./models/pluginAssembly");
const logger_1 = require("./logger");
async function deployAssembly(creds, apiConfig) {
    const currentPath = '.';
    const configFile = await fs_1.default.promises.readFile(path_1.default.resolve(currentPath, 'dataverse.config.json'), 'utf8');
    if (configFile == null) {
        logger_1.logger.warn('unable to find dataverse.config.json file');
        return;
    }
    const config = JSON.parse(configFile);
    logger_1.logger.info('deploy assembly');
    try {
        await (0, pluginAssembly_1.deploy)(config, apiConfig, creds.solution);
    }
    catch (error) {
        logger_1.logger.error(error.message);
        return;
    }
    logger_1.logger.done(`deployed assembly ${config.name}\r\n`);
}
exports.deployAssembly = deployAssembly;

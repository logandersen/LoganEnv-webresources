"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAccessToken = void 0;
const cachePlugin_1 = require("./cachePlugin");
const msal_node_1 = require("@azure/msal-node");
const logger_1 = require("./logger");
const clientId = '51f81489-12ee-4a9e-aaae-a2591f45987d';
const getAccessToken = async (tenant, url) => {
    const config = {
        auth: {
            clientId: clientId,
            authority: `https://login.microsoftonline.com/${tenant}/`
        },
        cache: {
            cachePlugin: (0, cachePlugin_1.cachePlugin)(url)
        }
    };
    const pca = new msal_node_1.PublicClientApplication(config);
    const cache = pca.getTokenCache();
    const accounts = await cache?.getAllAccounts().catch(ex => {
        throw new Error(ex.message);
    });
    // Try to get token silently
    if (accounts.length > 0) {
        const silentToken = await pca.acquireTokenSilent({
            account: accounts[0],
            scopes: [`${url}/.default`]
        }).catch(ex => {
            throw new Error(ex.message);
        });
        if (silentToken) {
            return silentToken;
        }
    }
    // Acquire token by device code
    const token = await pca.acquireTokenByDeviceCode({
        scopes: [`${url}/.default`],
        deviceCodeCallback: (response) => logger_1.logger.info(response.message)
    }).catch(ex => {
        throw new Error(ex.message);
    });
    return token;
};
exports.getAccessToken = getAccessToken;
